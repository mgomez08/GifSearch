{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","className","minLength","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","index","search","slice","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","onClick","ReactDOM","render","document","getElementById"],"mappings":"iNAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAoB5C,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OACdP,GADc,mBAEXO,OAEPN,EAAc,MAKlB,SACI,uBACIO,UAAU,sCACVC,UAAU,IACVC,KAAK,OACLC,MAAOX,EACPY,SAvBc,SAACT,GACvBF,EACIE,EAAEU,OAAOF,a,+BCRRG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEII,MAAMF,GAFV,cAEbG,EAFa,gBAGEA,EAASC,OAHX,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAC9Bc,EAAQJ,EAAMK,OAAO,OAE3B,OADAL,EAAQA,EAAMM,MAAM,EAAGF,GAEnB,sBAAKvB,UAAU,6CAAf,UACI,qBAAKA,UAAU,QAAQ0B,IAAKjB,EAAKkB,IAAKR,IACtC,6BAAKA,QCJJS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EACZhB,mBAAS,CAC/BuB,KAAM,GACNe,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAW,WACP1B,EAAQC,GACP0B,MAAK,SAAAC,GACFH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAGlB,CAACtB,IAEGuB,EDdsBK,CAAa5B,GAA9B2B,EAFuB,EAE5BpB,KAAWe,EAFiB,EAEjBA,QAClB,OACI,qCACI,oBAAI7B,UAAU,8CAAd,SAA6DO,IAC7D,uBACCsB,EAAW,iDACR,qBAAK7B,UAAU,YAAf,SAEoB,IAAhBkC,EAAKpC,OACDoC,EAAKlB,KAAK,SAAAkB,GAAI,OACV,cAAC,EAAD,eAEIA,GADCA,EAAKhB,OAId,+DAAkCX,WEjB7C6B,EAAe,WAAO,IAAD,EAGM7C,mBAAS,IAHf,mBAGvB8C,EAHuB,KAGX/C,EAHW,KAQ9B,OACI,qCACG,oBAAIU,UAAU,4CAAd,oCACA,oBAAIA,UAAU,2CAAd,2CACA,cAAC,EAAD,CAAcV,cAAeA,IAC7B,wBAAQU,UAAU,uDAAuDsC,QAR3D,WACjBhD,EAAc,KAOX,mCACA,6BAEK+C,EAAWrB,KAAK,SAAAT,GAAQ,OAChB,cAAC,EAAD,CAEAA,SAAUA,GADLA,YCjB7BgC,IAASC,OACN,cAAC,EAAD,IACDC,SAASC,eAAe,W","file":"static/js/main.9d0d6ecb.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(\r\n            e.target.value\r\n        )\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2){\r\n            setCategories(cats => [ \r\n                inputValue,\r\n                ...cats\r\n            ])\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (  \r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                className=\"animate__animated animate__backInUp\"\r\n                minLength=\"3\"\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n","\r\n\r\nexport const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=15&api_key=kqcR3GNFVrSm8cna5p0hD8jFYcOvzUJ1`;\r\n    const response = await fetch(url);\r\n    const {data} = await response.json();\r\n    \r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    const index = title.search(\"GIF\")\r\n    title = title.slice(0, index);\r\n    return (\r\n        <div className=\"card animate__animated animate__zoomInDown\">\r\n            <img className=\"fluid\" src={url} alt={title}/>\r\n            <h4>{title}</h4>\r\n        </div>\r\n    )\r\n}\r\n ","import React  from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:imgs, loading} = useFetchGifs(category);\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__lightSpeedInLeft\">{category}</h3>\r\n            <hr></hr>\r\n            {loading ? (<p>Cargando gifs...</p>): (\r\n                <div className=\"card-grid\">\r\n                {\r\n                    imgs.length !== 0 ? (\r\n                        imgs.map( imgs => ( \r\n                            <GifGridItem \r\n                            key={imgs.id} \r\n                            {...imgs}\r\n                            />\r\n                            ))\r\n                    ): (<p>Ups... no encontramos gifs de {category}</p>)\r\n                }\r\n            </div>\r\n            )}\r\n            \r\n            \r\n        </>\r\n    )\r\n }\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    })\r\n    \r\n    useEffect( () => {\r\n        getGifs(category)\r\n        .then(imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false,\r\n            })\r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, {useState} from 'react';\r\nimport {AddCategory} from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setCategories] = useState([])\r\n\r\n    const handleDelete = () => {\r\n        setCategories([]);\r\n    }\r\n    return (\r\n        <>\r\n           <h1 className=\"animate__animated animate__fadeInRightBig\">Bienvenido a GifSearch</h1>\r\n           <h2 className=\"animate__animated animate__fadeInLeftBig\">¿Qué Gif deseas buscar?</h2>\r\n           <AddCategory  setCategories={setCategories}/>\r\n           <button className=\"animate__animated animate__backInDown btn btn-danger\" onClick={handleDelete}>Eliminar búsquedas</button>\r\n           <ol>\r\n               {\r\n                categories.map( category => (\r\n                        <GifGrid \r\n                        key={category} \r\n                        category={category}\r\n                        />\r\n                )) \r\n               }                \r\n           </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp'\n\nReactDOM.render(\n   <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}